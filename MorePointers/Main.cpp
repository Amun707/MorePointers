#include<iostream>


int main() {
	system("chcp 1251>nul");
	int n, m;


	//НЕЙТРАЛЬНЫЙ АДРЕС ПАМЯТИ
	//создаем указатель на переменную n
	/*int* pn;
	

	//Нейтральные указатели
	
	//способ первый
	//pn = 0;

	//второй способ
	//pn = NULL;

	//третий способ! приоритетный! для с++
	pn = nullptr;//nullptr - новый тип данных, задача направлять указатель на нейтральную область памяти

	pn = &n;
	n = 10;
	if (pn == nullptr)
		std::cout << "Указатель не инециализирован.\n";
	else {
		std::cout << "pn = " << pn << std::endl;
		std::cout << "*pn = " << *pn << std::endl;//разыменование
	}*/

	//Модификация указателей
	/*n = 7, m = 15;

	//указатель на константу. Может быть инициализирован в любой момент
	//и может быть перенаправлен на другую область памяти.
	//Но с его помощью НЕВОЗМОЖНО поменять значение памяти на которую он 
	//направлен. В этом и проявляется константность.
	const int* pointer1;
	pointer1 = &n;
	pointer1 = &m;
	//*pointer1 = 20;//ошибка

	//Константный указатель или указатель-константа. Должен быть инициализирован
	//в момент создания и не может быть перенаправлен на другую
	//область памяти. С его помощью можно менять значение памяти на 
	//которую он направлен.
	int* const pointer2 = &n;
	//pointer2 = &m;//ошибка
	*pointer2 = 8;


	//Константный указатель на константу. Должен быть инициализирован в момент
	//создания и не может быть перенаправлен на другую область памяти.
	//С его помощью НЕЛЬЗЯ менять значение памяти на которую он направлен.
	//Сего помощью можно только что либо вывести
	const int* const pointer3 = &n;
	//pointer3 = &m;//ошибка
	//*pointer3 = 5;//ошибка*/






	return 0;
}